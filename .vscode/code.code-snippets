{
  // Place your fabric_ts_h5 工作区 snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
  // Placeholders with the same ids are connected.
  // Example:
  "Component": {
    "prefix": "comp",
    "body": [
      "import { FC } from 'react'",
      "import { observer } from 'mobx-react'",
      "",
      "export const ${TM_FILENAME_BASE/(.*)/${1:/capitalize}/}Comp: FC<{}> = observer(({}) => {",
      "  return <Flex layout=''></Flex>",
      "})",
    ],
    "description": "Component",
  },
  "Sub Component": {
    "prefix": "subcomp",
    "body": [
      "const $1Comp: FC<{}> = observer(({}) => {",
      "  return <Flex layout=''></Flex>",
      "})",
    ],
    "description": "Sub Component",
  },
  "Service": {
    "prefix": "service",
    "body": [
      "class $1${TM_FILENAME_BASE}Service {",
      "  constructor() {",
      "    makeAutoObservable(this)",
      "  }",
      "}",
      "",
      "export const $1${TM_FILENAME_BASE} = new $1${TM_FILENAME_BASE}Service()",
      "",
    ],
    "description": "Service",
  },
  "useState": {
    "prefix": "usestate",
    "scope": "typescriptreact",
    "body": ["const [$1, set$1] = useState()"],
    "description": "useState",
  },
}
